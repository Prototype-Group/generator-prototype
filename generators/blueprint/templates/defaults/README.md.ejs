# <%= bpName %> (`<%= bpTypeName %>`)

## Description

This blueprint is based on the blueprint of Veams.

> Just place a generic quote for your type.

-----------

## Requirements
- `Veams#5.0.0` - Replace this requirement with the libs you need for this type.

-----------

## Installation

### Installation with Veams from local machine

`veams install bp absolute/filepath/to/<%= filename %>`

### Installation with Bower or Veams

When published on bower you can install the <%= bpTypeName %> by executing:

1. `veams install veams-<%= bpTypeName %> <%= filename %>`
2. `bower install veams-<%= bpTypeName %>-<%= filename %> --save`

-----------

## Fields

### `<%= bpTypePrefix %><%= filename %>`
<% if (props.bpWrapWith) { %>
The partial is a `wrapWith` partial.
<% } %>
#### Settings
- settings.<%= bpName %>Classes {`String`} - _Modifier classes for <%= bpTypeName %>._<% if (bpTypeName === 'component') { %>
- settings.<%= bpName %>ContextClass {`String`} [default] - _Context class of component._<% } %> <% if(props.bpWithJs) {%>
- settings.<%= bpName %>JsOptions {`Object`} - _JavaScript options which gets stringified._<% } %>

#### Content
- content.<%= bpName %>Field {`String`} - _Please add a description!_
<% if(props.bpWithJs) { %>
-------------

## JavaScript Options

The module gives you the possibility to override default JS options:

- optionOne {`String`} ['is-option'] - _Please add a description!_
<% } %>
------------

## SASS

### Variables

- $<%= filename %>-my-custom-var {`String`} [] - _Please add a description!_

### Modifier Classes

You can add the following modifiers to `<%= filename %>`:
- is-modifier - _Please add a description!_
