// Global dependencies
import { environment } from 'env';
<%if (jsLibs && jsLibs.indexOf('jquery') !== -1) { %>
import $ from 'jquery';<% } %><%if (jsLibs && jsLibs.indexOf('veams-query') !== -1) { %>
import { default as $ } from 'veams-query';<% } %>
import Veams from 'veams';
import VeamsLogger from 'veams-plugin-logger';
import VeamsVent from 'veams-plugin-vent';
import VeamsMediaQueryHandler from 'veams-plugin-media-query-handler';<% if (projectType === 'static-page-app') { %>
import VeamsDOM from 'veams-plugin-dom';
import VeamsModules from 'veams-plugin-modules';
// import VeamsStore from 'veams-plugin-store';
// import VeamsTemplater from 'veams-plugin-templater';<% } %>
import EVENTS from '@@shared/scripts/events';

let Core = {};<%if (jsLibs && (jsLibs.indexOf('jquery') !== -1 || jsLibs.indexOf('veams-query') !== -1)) { %>
Core.$ = $;<% } %>

// Versioning
Core.version = "0.0.1";
// Veams
Veams.onInitialize(() => {
/**
* Veams Plugins
*/
<% if (projectType === 'static-page-app') { %>
// Dom Plugin
Veams.use(VeamsDOM, {
DOM: $
});

// Module System Plugin
Veams.use(VeamsModules, {
useMutationObserver: true,
internalCacheOnly: false
});

// Store Plugin
// Veams.use(VeamsStore, {
// 	reducer: rootReducer,
// 	state: INITIAL_STATE,
// 	subjects: subjects
// });
<% } %>
// Vent Plugin
Veams.use(VeamsVent, {
furtherEvents: EVENTS
});

// Logger Plugin for devmode and logger
Veams.use(VeamsLogger);

// Media Query Handler Plugin
Veams.use(VeamsMediaQueryHandler);


// Trigger global scroll event
window.onscroll = Veams.helpers.throttle((e) => {
Veams.Vent.trigger(Veams.EVENTS.scroll, e);
}, 200);

});

<% if (projectType === 'static-page-app') { %>
// Imports
// @INSERTPOINT :: @ref: js-import, @keep: true //

// Initialize modules with Veams
Veams.modules.register([
    // @INSERTPOINT :: @ref: js-init-v5, @keep: true //
]);

// @INSERTPOINT :: @ref: js-init-once-v5, @keep: true //
<% } %>